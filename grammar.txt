S'		-> NSPACE

NSPACE -> namespace <NAMESPACE> SPC COMM_NAME <ADDNAMESPACE><CHECKPROTO> { <LEVEL+> } <LEVEL->
NSPACE -> namespace <NAMESPACE> SPC COMM_NAME <ADDNAMESPACE><CHECKPROTO> { <LEVEL+> NSPACE } <LEVEL->
NSPACE -> DEFS <CHECKPROTO>
NSPACE -> NSPACE NSPACE
NSPACE -> SPC

DEFS	-> FUNC_SB | FUNC_S 
FUNC_SB -> FUNC { } | FUNC SPC { }  | FUNC { SPC } | FUNC SPC { SPC } 
FUNC_S	-> FUNC ; 

FUNC	-> FUNC_ID SPC ( ) | FUNC_ID SPC ( SPC ) SPC | FUNC_ID ( ) | FUNC_ID ( SPC ) | FUNC_ID ( ) SPC
FUNC	-> FUNC_ID SPC ( ARG_LIST <CHECKARGLIST> ) SPC | FUNC_ID SPC ( ARG_LIST <CHECKARGLIST> ) | FUNC_ID ( ARG_LIST <CHECKARGLIST> ) SPC | FUNC_ID ( ARG_LIST <CHECKARGLIST> ) 

FUNC_ID -> ARG_TYPE <ADDFUNCNAME>

ARG_LIST -> ARG_TYPE <ADDPARAM> | ARG_MID
ARG_MID  -> ARG_TYPE <ADDPARAM> , | ARG_MID ARG_MID | ARG_MID ARG_TYPE | ARG_MID ARG_FL
ARG_FL   -> SPC DOTS SPC | DOTS SPC | SPC DOTS | DOTS
DOTS     -> ... <LIT><ADDPARAM>

ARG_TYPE -> ARG | ARG SPC | SPC ARG | SPC ARG SPC | ARG_PTR 
ARG_TYPE -> ARG_PTR | ARG_PTR SPC | SPC ARG_PTR | SPC ARG_PTR SPC 
ARG_TYPE -> ARG_LINK | ARG_LINK SPC | SPC ARG_LINK | SPC ARG_LINK SPC 

ARG      -> KEYWORD SPC IDENTIF | void <TYPE> SPC IDENTIF
ARG_PTR  -> KEYWORD SPC AST IDENTIF | KEYWORD SPC AST SPC IDENTIF | KEYWORD AST SPC IDENTIF | void <TYPE> SPC AST IDENTIF | void <TYPE> SPC AST SPC IDENTIF | void <TYPE> AST SPC IDENTIF
ARG_LINK -> KEYWORD SPC AMP IDENTIF | KEYWORD SPC AMP SPC IDENTIF | KEYWORD AMP SPC IDENTIF 
AST      -> * <LIT>
AMP      -> & <LIT>

KEYWORD -> int <TYPE> | char <TYPE> | bool <TYPE> | float <TYPE> | double <TYPE> | short <TYPE> | long <TYPE>

COMM_NAME -> START | START SYMB | START SPC | START SYMB SPC
IDENTIF	-> START | START SYMB | IDENTIF DIGIT_ARRAY

SYMB	-> START   | 0-9 <LIT> | SYMB SYMB
START	-> _ <LIT> | a-z <LIT> | A-Z <LIT> 

DIGIT_ARRAY -> [ <LIT> DIGIT_TRIM ] <LIT> | [ <LIT> ] <LIT> | [ <LIT> SPC ] <LIT> | DIGIT_ARRAY DIGIT_ARRAY
DIGIT_TRIM -> DIGIT | SPC DIGIT | DIGIT SPC  | SPC DIGIT SPC

DIGIT   -> 0-9 <LIT> | DIGIT DIGIT
SPC   -> SPC SPC
SPC   -> \s

